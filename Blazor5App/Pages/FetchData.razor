@page "/fetchdata"

@using Blazor5App.Data
@using Microsoft.AspNetCore.Components.Web.Virtualization
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>#</th>

                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var forecast in forecasts)
            {
            <tr>
                <td>@forecast.Counter</td>

                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
            </tr>
            }
          
        </tbody>
    </table>
    <hr />
    <table class="table">
        <thead>
            <tr>
                <th>#</th>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>

       
            <Virtualize Items="forecasts" Context="forecast">
                <ItemContent>
                    <tr @key="forecast.Counter">
                        <td>@forecast.Counter</td>
                        <td>@forecast.Date.ToShortDateString()</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.TemperatureF</td>
                        <td>@forecast.Summary</td>
                    </tr>
                </ItemContent>
                <Placeholder>
                    <tr>
                        <td>Loading...</td>
                    </tr>
                </Placeholder>
            </Virtualize>
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}
